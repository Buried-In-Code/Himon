[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {email = "BuriedInCode@tuta.io", name = "BuriedInCode"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Natural Language :: English",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Topic :: Internet",
  "Typing :: Typed"
]
dependencies = [
  "pydantic >= 1.10.7",
  "ratelimit >= 2.2.1",
  "requests >= 2.30.0"
]
description = "A Python wrapper for League of Comic Geeks."
dynamic = ["version"]
keywords = ["comic", "comics", "metadata"]
license = "GPL-3.0-or-later"
name = "Himon"
readme = "README.md"
requires-python = ">= 3.8"

[project.optional-dependencies]
dev = [
  "pre-commit >= 3.3.1"
]
docs = [
  "mkdocs >= 1.4.3",
  "mkdocs-include-markdown-plugin >= 4.0.4",
  "mkdocs-material >= 9.1.11",
  "mkdocstrings[python] >= 0.21.2"
]
test = [
  "pytest >= 7.3.1",
  "pytest-cov >= 4.0.0",
  "pytest-pretty >= 1.2.0"
]

[project.urls]
Documentation = "https://himon.readthedocs.io/en/latest/"
Homepage = "https://pypi.org/project/Himon"
Issues = "https://github.com/Buried-In-Code/Himon/issues"
Source = "https://github.com/Buried-In-Code/Himon"

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py38", "py39"]

[tool.coverage.report]
show_missing = true

[tool.coverage.run]
source = ["himon"]

[tool.hatch.version]
path = "himon/__init__.py"

[tool.pytest.ini_options]
addopts = ["--cov"]

[tool.ruff]
fix = true
format = "grouped"
ignore = [
  "A001",
  "A003",
  "ANN101",
  "ANN102",
  "ANN204",
  "ANN206",
  "ANN401",
  "C901",
  "D107",
  "D212",
  "RET504",
  "SIM105"
]
line-length = 100
select = [
  "A",
  "ANN",
  "ARG",
  "B",
  "BLE",
  "C40",
  "C90",
  "COM",
  "D",
  "DJ",
  "E",
  "ERA",
  "F",
  "G",
  "I",
  "ICN",
  "INP",
  "ISC",
  "N",
  "NPY",
  "PD",
  "PGH",
  "PIE",
  "PLC",
  "PLE",
  "PLW",
  "PT",
  "PTH",
  "PYI",
  "Q",
  "RET",
  "RSE",
  "RUF",
  "S",
  "SIM",
  "SLF",
  "T10",
  "T20",
  "TCH",
  "TID",
  "UP",
  "W",
  "YTT"
]
show-fixes = true
target-version = "py38"

[tool.ruff.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
combine-as-imports = true

[tool.ruff.mccabe]
max-complexity = 18

[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod", "pydantic.validator"]

[tool.ruff.per-file-ignores]
"tests/test_*.py" = ["S101", "SLF001"]

[tool.ruff.pydocstyle]
convention = "google"
